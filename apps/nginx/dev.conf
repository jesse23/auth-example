worker_processes 1;

events { worker_connections 1024; }

http {
    # https://stackoverflow.com/questions/29573489/nginx-failing-to-load-css-and-js-files-mime-type-error
    include /etc/nginx/mime.types;
    sendfile on;
    gzip              on;
    gzip_http_version 1.0;
    gzip_proxied      any;
    gzip_min_length   500;
    gzip_disable      "MSIE [1-6]\.";
    gzip_types        text/plain text/xml text/css
                      text/comma-separated-values
                      text/javascript
                      application/x-javascript
                      application/atom+xml;

    # List of application servers
    upstream auth-sam {
        server auth-example-auth-sam:3000;
    }

    upstream auth-jwt {
        server auth-example-auth-jwt:3001;
    }

    upstream api-sample {
        server auth-example-api-sample:3002;
    }

    server {
        listen  3000;

        # Define the custom error page or redirection URL for 401 responses
        error_page 401 /unauthorized?return_url=$request_uri;
        error_page 403 /unauthorized?return_url=$request_uri;

        # static files
        location / {
            auth_request     /api/auth/sso/saml/auth;
            auth_request_set $auth_status $upstream_status;
            root   /usr/share/nginx/html;
            sendfile           on;
            tcp_nopush on;
        }

        location ^~ /assets/ {
            alias /usr/share/nginx/html/app-sample/assets/;
            gzip_static on;
            expires max;
            # include /etc/nginx/mime.types;
            add_header Cache-Control public;
        }

#        location ~ \.css {
#            add_header  Content-Type    text/css;
#        }
#
#        location ~ \.js {
#            add_header  Content-Type    application/x-javascript;
#        }

        # login API
        location /login {
            proxy_pass http://auth-sam/login?$args;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header X-Original-URI $request_uri;
        }

        # api server
        location /api {
            # proxy_pass http://auth-jwt/;
            auth_request     /api/auth/sso/saml/auth;
            auth_request_set $auth_status $upstream_status;
            proxy_pass http://api-sample/api;
        }

        # auth server
        location /api/auth/sso/saml {
            # proxy_pass http://auth-jwt/;
            proxy_pass http://auth-sam/api/auth/sso/saml;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header X-Original-URI $request_uri;
        }

        # unauthorized handler
        location = /unauthorized {
            # You can use a custom error page or redirection URL here.
            # For example, return a custom HTML page for unauthorized access.
            # return 200 'Custom 401 Unauthorized page';
    
            # Or redirect to another URL (e.g., the login page).
            # rewrite ^/unauthorized(.*)$ /login$1 redirect;
            return 302 /login?$args;

            # For demonstration purposes, this example returns a simple text message.
            # return 200 '401 Unauthorized';
        }
    }
}
